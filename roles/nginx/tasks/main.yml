---
- name: Load variables
  include_vars: main.yml
  tags: nginx

- ufw:
    state: enabled
    policy: deny
    direction: incoming
  become: true
  tags: nginx

- ufw:
    rule: limit
    port: ssh
    proto: tcp
    direction: in
  become: true
  tags: nginx

- ufw:
    rule: allow
    port: "22"
    direction: in
  become: true
  tags: nginx

- ufw:
    rule: allow
    port: "80"
    direction: in
  become: true
  tags: nginx

- ufw:
    rule: allow
    port: "443"
    direction: in
  become: true
  tags: nginx

- name: Create includes dir
  file:
    path: /etc/nginx/includes
    state: directory
    owner: root
    mode: 0755
  become: true
  tags: nginx

- name: Generate nginx.conf file
  template:
    src: nginx.conf.j2
    dest: /etc/nginx/nginx.conf
    owner: root
    group: root
    mode: 0644
  become: true
  tags: nginx
  notify:
    - reload nginx

- name: Copy blocked ip address file
  copy:
    src: includes/blockips.conf
    dest: /etc/nginx/includes/blockips.conf
    owner: root
    group: root
    mode: 0644
  become: true
  tags: nginx

- name: Copy security file
  copy:
    src: includes/security.conf
    dest: /etc/nginx/includes/security.conf
    owner: root
    group: root
    mode: 0644
  become: true
  tags: nginx


- name: Copy tls headers
  copy:
    src: includes/headers-tls-client-authenticate.conf
    dest: /etc/nginx/includes/headers-tls-client-authenticate.conf
    owner: root
    group: root
    mode: 0644
  become: true
  tags: nginx
  notify:
    - reload nginx

- name: Test if new config is ok
  command: "/usr/sbin/nginx -t"
  changed_when: False
  become: true
  tags: nginx

- name: Set sellinux to work with nginx
  command: setsebool httpd_can_network_connect on -P
  become: yes
  tags: nginx

- name: Make sure a service is running
  systemd:
    state: started
    name: nginx
    enabled: yes
  become: yes
  tags: nginx

- template: src=hypnotoad.yml.j2 dest=/home/www/etc/hypnotoad.yml owner=www group=www mode=0644
  become: yes
  become_user: www
