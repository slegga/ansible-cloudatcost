- block:
  - name: install libselinux-python for selinux
    yum: name=libselinux-python state=installed

- block:
  - name: add user
    user:
      name: "{{ ssh_user }}"
      groups: "{{ ssh_group }}"
      password: "{{ ssh_user_pass }}"
      generate_ssh_key: yes
      ssh_key_bits: 2048
    tags: users

  - name: create an authorized_keys file
    command: /bin/cp /home/{{ ssh_user }}/.ssh/id_rsa.pub /home/{{ ssh_user }}/.ssh/authorized_keys
    tags: users

  - name: change attribures of an authorized_keys file
    file:
      path: /home/{{ ssh_user }}/.ssh/authorized_keys
      owner: "{{ ssh_user }}"
      group: "{{ ssh_user }}"
      mode: 0600
    tags: users

  - name: retrieve a private key from remote host
    fetch:
      src: /home/{{ ssh_user }}/.ssh/id_rsa
      dest: fetch/private_key-{{ inventory_hostname }}
      validate_md5: true
      fail_on_missing: true
      flat: true
    tags: users

  - name: "allow {{ ssh_group }} group to use sudo"
    lineinfile:
      dest: /etc/sudoers
      state: present
      insertafter: "^# %{{ ssh_group }}\\s+ALL=\\(ALL\\)\\s+ALL"
      line: "%{{ ssh_group }} ALL=(ALL) ALL"
      validate: "visudo -cf %s"
      backup: yes
    tags: users


- block:
  - name: forbid root to access via ssh
    lineinfile:
      dest: /etc/ssh/sshd_config
      state: present
      insertafter: "^#PermitRootLogin yes"
      line: "PermitRootLogin no"
      validate: "sshd -T -f %s"
      backup: yes
    notify:
      - restart sshd
    tags: ssh

  - name: forbid ssh user to login with password
    lineinfile:
      dest: /etc/ssh/sshd_config
      state: present
      regexp: "^PasswordAuthentication yes"
      line: "PasswordAuthentication no"
      backrefs: yes
      validate: "sshd -T -f %s"
      backup: yes
    notify:
      - restart sshd
    tags: ssh

  - name: permit only specific user to access via ssh
    lineinfile:
      dest: /etc/ssh/sshd_config
      state: present
      insertafter: "^PasswordAuthentication no"
      regexp: "^AllowUsers"
      line: "AllowUsers {{ ssh_user }}"
      validate: "sshd -T -f %s"
      backup: yes
    notify:
      - restart sshd
    tags: ssh

  - name: change ssh port number
    lineinfile:
      dest: /etc/ssh/sshd_config
      state: present
      insertafter: "^#Port 22"
      regexp: "^Port"
      line: "Port {{ ssh_port }}"
      validate: "sshd -T -f %s"
      backup: yes
    notify:
      - restart sshd
    tags: ssh

  - name: change acceptable tcp port for ssh on iptables
    lineinfile:
      dest: /etc/sysconfig/iptables-config
      state: present
      regexp: "^-A INPUT -m state --state NEW -m tcp -p tcp --dport 22 -j ACCEPT"
      line: "-A INPUT -m state --state NEW -m tcp -p tcp --dport {{ ssh_port }} -j ACCEPT"
      backrefs: yes
      backup: yes
    notify:
      - restart iptables
    tags: ssh
